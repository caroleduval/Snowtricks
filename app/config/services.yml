# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    AppBundle\:
        resource: '../../src/AppBundle/*'
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    twig.extension.debug:
        class: Twig_Extension_Debug
        tags:
            - { name: 'twig.extension' }

    app.form.registration:
        class: AppBundle\Form\Type\RegistrationType
        tags:
            - { name: form.type, alias: app_user_registration }

    app.form.profile:
        class: AppBundle\Form\Type\ProfileType
        tags:
            - { name: form.type, alias: fos_user_profile }

# Création d'une vidéo
# Analyse du lien vidéo avant enregistrement en base de données
    app.service.iframe_builder:
        class: AppBundle\Service\IframeBuilder

    # Ecoute de l'évênement
    app.doctrine_listener.video_creation:
        class: AppBundle\DoctrineListener\VideoCreationListener
        arguments:
            - "@app.service.iframe_builder"
        tags:
            - { name: doctrine.event_listener, event: prePersist }

# Création d'un user
# Création du username avant enregistrement en base de données
# Envoi d'un email de confirmation après enregistrement en base de données
    app.service.user_mailer:
        class: AppBundle\Service\UserMailer
        arguments:
            - "@mailer"

    # Ecoute de l'évênement
    app.doctrine_listener.user_creation:
        class: AppBundle\DoctrineListener\UserCreationListener
        arguments:
            - "@app.service.user_mailer"
        tags:
            - { name: doctrine.event_listener, event: postPersist }

    app.service.file_uploader:
        class: AppBundle\Service\FileUploader

    app.doctrine_listener.photo_upload:
        class: AppBundle\DoctrineListener\PhotoUploadListener
        arguments:
            - "@app.service.file_uploader"
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: postUpdate }
            - { name: doctrine.event_listener, event: preRemove }
            - { name: doctrine.event_listener, event: postRemove }

    app.service.collection_updater:
        class: AppBundle\Service\CollectionUpdater
        arguments:
            - "@doctrine.orm.entity_manager"

